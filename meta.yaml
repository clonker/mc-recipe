# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "mc" %}
{% set version = "4.8.23" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed.
  url: https://github.com/MidnightCommander/{{ name }}/archive/{{ version }}.tar.gz
  sha256: 732024636611f1d770a4324204eef4b9ac840ec37a9d3c3476087278962e3f90
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
    - autoconf
    - automake
    - libtool
    - gettext
    - pkg-config
    - m4
    - glib
    - slang
    - gettext
    - opencv

  run:
    - gettext
    - opencv
    - slang
    - glib

about:
  home: http://github.com/MidnightCommander/mc
  license: GPL-3
  license_family: GPL
  license_file: COPYING
  summary: 'Visual file manager in user shell.'

  # The remaining entries in this section are optional, but recommended.
  description: |
    GNU Midnight Commander is a visual file manager, licensed under
    GNU General Public License and therefore qualifies as Free Software.
    It's a feature rich full-screen text mode application that allows you to copy,
    move and delete files and whole directory trees, search for files
    and run commands in the subshell. Internal viewer and editor are included.
  doc_url: https://midnight-commander.org/wiki/doc
  dev_url: https://github.com/MidnightCommander/mc

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - clonker
